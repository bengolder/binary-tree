!function t(n,r,i){function e(a,l){if(!r[a]){if(!n[a]){var s="function"==typeof require&&require;if(!l&&s)return s(a,!0);if(o)return o(a,!0);var u=new Error("Cannot find module '"+a+"'");throw u.code="MODULE_NOT_FOUND",u}var h=r[a]={exports:{}};n[a][0].call(h.exports,function(t){var r=n[a][1][t];return e(r?r:t)},h,h.exports,t,n,r,i)}return r[a].exports}for(var o="function"==typeof require&&require,a=0;a<i.length;a++)e(i[a]);return e}({1:[function(t,n){function r(t,n,r){this.root=null,this._get=void 0==r?function(t){return t.data}:function(t){return r(t.data)},n=n||e,this._compare=function(t,r){var i=n(this._get(t),this._get(r));return!i||0>i?!0:!1},t&&this.insertMany(t)}var i=t("./binary_node.js"),e=function(t,n){return t>n};r.prototype={_dataOrNull:function(t){return t?t.data:null},_min:function(t){for(;null!==t.left;)t=t.left;return t},min:function(){return this._dataOrNull(this._min(this.root))},_max:function(t){for(;null!==t.right;)t=t.right;return t},max:function(){return this._dataOrNull(this._max(this.root))},removeKey:function(t){var n=this._find(t);n&&this._delete(this._find(t))},_delete:function(t){if(null==t.left)this._transplant(t,t.right);else if(null==t.right)this._transplant(t,t.left);else{var n=this._min(t.right);n.parent!==t&&(this._transplant(n,n.right),n.right=t.right,n.right.parent=n),this._transplant(t,n),n.left=t.left,n.left.parent=n}},_transplant:function(t,n){null==t.parent?this.root=n:t==t.parent.left?t.parent.left=n:t.parent.right=n,null!==n&&(n.parent=t.parent)},_walk:function(t){t&&(this._walk(t.left),this._nodelist.push(t.data),this._walk(t.right))},walk:function(){if(!this.root)return[];this._nodelist=[],this._walk(this.root);var t=this._nodelist;return delete this._nodelist,t},insert:function(t){var n,r=null,e=this.root;for(n=new i(this,t);null!==e;)r=e,e=this._compare(n,r)?e.left:e.right;return n.parent=r,null==r?this.root=n:this._compare(n,r)?r.left=n:r.right=n,this},insertMany:function(t){var n=this;return t.forEach(function(t){n.insert(t)}),this},_find:function(t){for(var n=this.root;null!==n&&t!==this._get(n);)n=t<this._get(n)?n.left:n.right;return n},findKey:function(t){return this._dataOrNull(this._find(t))}},n.exports=r},{"./binary_node.js":2}],2:[function(t,n){function r(t,n){this.tree=t,this.data=n,this.parent=null,this.left=null,this.right=null}r.prototype.toString=function(){return"BinaryTreeNode(key: "+this.tree._get(this)+", data: "+this.data.toString()+")"},n.exports=r},{}]},{},[1]);